<?xml version="1.0" encoding="utf-8" ?>
<LanguageData>

	<TD.TDFindLib>TD Find Lib</TD.TDFindLib>
	<TD.Delete0>Delete {0}?</TD.Delete0>
	<TD.StopRefresh0>Stop refreshing {0}?</TD.StopRefresh0>
	<TD.AllMaps>All maps</TD.AllMaps>
	<TD.CurrentMap>Current map</TD.CurrentMap>
	<TD.ChosenMaps>Chosen maps</TD.ChosenMaps>
	<TD.IncludeShort>Inc</TD.IncludeShort>
	<TD.ExcludeShort>Exc</TD.ExcludeShort>
	<TD.DeleteThisQuery>Delete this filter</TD.DeleteThisQuery>
	<TD.EnableThisQuery>Enable this filter</TD.EnableThisQuery>
	<TD.IncludeOrExcludeThingsMatchingThisQuery>Include or Exclude things matching this filter</TD.IncludeOrExcludeThingsMatchingThisQuery>
	<TD.SearchTriedToLoad>Search "{0}" tried to load "{1}" filter named "{2}" but none could be found</TD.SearchTriedToLoad>
	<TD.SearchTriedToLoadOnMap>Search "{0}" tried to load "{1}" filter named "{2}" on {3} but none could be found</TD.SearchTriedToLoadOnMap>
	<TD.Spoils>Spoils</TD.Spoils>
	<TD.Refrigerated>Refrigerated</TD.Refrigerated>
	<TD.Frozen>Frozen</TD.Frozen>
	<TD.Player>Player</TD.Player>
	<TD.Mechanoid>Mechanoid</TD.Mechanoid>
	<TD.Insectoid>Insectoid</TD.Insectoid>
	<TD.NoFaction>No Faction</TD.NoFaction>
	<TD.NotMadeFromStuff>Not made from stuff</TD.NotMadeFromStuff>
	<TD.AnyStockpile>Any Stockpile</TD.AnyStockpile>
	<TD.AnyGrowingZone>Any Growing Zone</TD.AnyGrowingZone>
	<TD.Opened>Opened</TD.Opened>
	<TD.BlockedOpen>Blocked Open</TD.BlockedOpen>
	<TD.IncludeThingsThatMatch>Include things that match</TD.IncludeThingsThatMatch>
	<TD.ExcludeThingsThatMatch>Exclude things that match</TD.ExcludeThingsThatMatch>
	<TD.OfTheseQueries>of these filters:</TD.OfTheseQueries>
	<TD.TheThingHoldingThis>The thing holding this</TD.TheThingHoldingThis>
	<TD.AnythingThisIsHolding>Anything this is holding</TD.AnythingThisIsHolding>
	<TD.Matches>matches</TD.Matches>
	<TD.Of>of:</TD.Of>
	<TD.AnythingXStepsNearbyMatchesPre>Anything</TD.AnythingXStepsNearbyMatchesPre>
	<TD.AnythingXStepsNearbyMatchesPost>steps nearby matches</TD.AnythingXStepsNearbyMatchesPost>
	<TD.From>From</TD.From>
	<TD.Invisible>(invisible)</TD.Invisible>
	<TD.Cold>Cold</TD.Cold>
	<TD.ALittleCold>A little cold</TD.ALittleCold>
	<TD.Comfortable>Comfortable</TD.Comfortable>
	<TD.ALittleHot>A little hot</TD.ALittleHot>
	<TD.Hot>Hot</TD.Hot>
	<TD.IsPrisoner>Is Prisoner</TD.IsPrisoner>
	<TD.InCell>In Cell</TD.InCell>
	<TD.ThereAreNoOptionsAvailablePerhapsYouShouldUncheckOnlyAvailableThings>There are no options available (Perhaps you should hold shift when clicking to show all options)</TD.ThereAreNoOptionsAvailablePerhapsYouShouldUncheckOnlyAvailableThings>
	<TD.LockEditing>Lock Editing</TD.LockEditing>
	<TD.Listing>Listing: </TD.Listing>
	<TD.Name>Name:</TD.Name>
	<TD.OnlyShowQueryOptionsForAvailableThings>Only show existing things as an option (shift invert)</TD.OnlyShowQueryOptionsForAvailableThings>
	<TD.ForExampleDontShowTheOptionMadeFromPlasteelIfNothingIsMadeFromPlasteel>For example, When selecting filter options, don't show the option 'Made from Plasteel' if nothing is made from plasteel.\n\nShift-click the option to reverse this setting for that click.</TD.ForExampleDontShowTheOptionMadeFromPlasteelIfNothingIsMadeFromPlasteel>
	<TD.AddNewQuery...>Add new filter...</TD.AddNewQuery...>
	<TD.AnyOption>Any</TD.AnyOption>
	<TD.AllOptions>All</TD.AllOptions>
	<TD.AnyValue>Any</TD.AnyValue>
	<TD.LabelCountThings>{0} thing(s)</TD.LabelCountThings>
	<TD.SelectAllGameAllowsUpTo>Select All ( game allows up to {0} )</TD.SelectAllGameAllowsUpTo>
	<TD.Refresh>Refresh</TD.Refresh>
	<TD.ContinuousRefreshAboutEverySecond>Continuous Refresh (about every second)</TD.ContinuousRefreshAboutEverySecond>
	<TD.SavedSearches>Saved Searches</TD.SavedSearches>
	<TD.CopyNameSuffix> (Copy)</TD.CopyNameSuffix>
	<TD.Settings>Settings:</TD.Settings>
	<TD.ViewQuerySearchLibrary>Open the Saved Search Library</TD.ViewQuerySearchLibrary>
	<TD.View>View</TD.View>
	<TD.SaveSearches>Save To Library</TD.SaveSearches>
	<TD.LoadSearches>Load From Library</TD.LoadSearches>
	<TD.SaveTo0>Save to {0}</TD.SaveTo0>
	<TD.TDFindLibrary>TD Find Library</TD.TDFindLibrary>
	<TD.SaveChangesTo0>Save changes to {0}?</TD.SaveChangesTo0>
	<TD.OverwriteSearch>Overwrite Search</TD.OverwriteSearch>
	<TD.SaveAsCopy>Save as Copy</TD.SaveAsCopy>
	<TD.OpenTheLibraryOfSearches>Open the library of searches</TD.OpenTheLibraryOfSearches>
	<TD.ImportSearchFrom>Import search from...</TD.ImportSearchFrom>
	<TD.ExportSearchTo>Export search to...</TD.ExportSearchTo>
	<TD.ImportGroupFrom>Import group from...</TD.ImportGroupFrom>
	<TD.ExportGroupTo>Export group to...</TD.ExportGroupTo>
	<TD.ImportLibraryFrom>Import library from...</TD.ImportLibraryFrom>
	<TD.ExportLibraryTo>Export library to...</TD.ExportLibraryTo>
	<TD.CopyToClipboard>Copy to clipboard</TD.CopyToClipboard>
	<TD.PasteFromClipboard>Paste from clipboard</TD.PasteFromClipboard>
	<TD.AND>AND</TD.AND>
	<TD.OR>OR</TD.OR>
	<TD.NOT>NOT</TD.NOT>
	<TD.HeyManWeHaveToSearchSomewhere>Hey man we have to search somewhere</TD.HeyManWeHaveToSearchSomewhere>
	<TD.Searching>Searching: </TD.Searching>
	<TD.Named>Named: </TD.Named>
	<TD.HostIs>Host Is</TD.HostIs>
	<TD.FactionIs>Is</TD.FactionIs>
	<TD.InstallingCategory>(Installing)</TD.InstallingCategory>
	<TD.BlueprintCategory>(Blueprint)</TD.BlueprintCategory>
	<TD.FrameCategory>(Frame)</TD.FrameCategory>
	<TD.BlueprintCategoryTerrain>(Terrain Blueprint)</TD.BlueprintCategoryTerrain>
	<TD.FrameCategoryTerrain>(Terrain Frame)</TD.FrameCategoryTerrain>
	<TD.MiscCategory>Misc</TD.MiscCategory>
	<TD.LivingCategory>Living</TD.LivingCategory>
	<TD.MineableCategory>Mineable</TD.MineableCategory>
	<TD.OtherCategory>(Other)</TD.OtherCategory>
	<TD.TDFindLibSearchLibrary>TD Find Lib: Search Library</TD.TDFindLibSearchLibrary>
	<TD.NewGroup>New Group</TD.NewGroup>
	<TD.NameForNewGroup>Name for New Group</TD.NameForNewGroup>
	<TD.AddNewGroup>Add New Group...</TD.AddNewGroup>
	<TD.NewSearch>New Search</TD.NewSearch>
	<TD.NameForNewSearch>Name for New Search</TD.NameForNewSearch>
	<TD.EditThisSearch>Edit this search</TD.EditThisSearch>
	<TD.ActiveSearches>Active Searches</TD.ActiveSearches>
	<TD.ViewThisSearch>View this search</TD.ViewThisSearch>
	<TD.OpenTheModControllingThisSearch>Open the mod controlling this search</TD.OpenTheModControllingThisSearch>
	<TD.StopThisSearchFromRunningITrustYouKnowWhatYoureDoing>Stop this search from running (I trust you know what you're doing)</TD.StopThisSearchFromRunningITrustYouKnowWhatYoureDoing>
	<TD.Every0Ticks>Every {0} ticks</TD.Every0Ticks>
	<TD.SetRefreshPeriodInTicks>Set refresh period in ticks</TD.SetRefreshPeriodInTicks>
	<TD.GodModeIsAllowingYouToSeeThingsInFoggedAreasThingsYouCantNormallyKnowAndVariousOtherWeirdThings>God mode is allowing you to see things in fogged areas, things you can't normally know, and various other weird things</TD.GodModeIsAllowingYouToSeeThingsInFoggedAreasThingsYouCantNormallyKnowAndVariousOtherWeirdThings>
	<TD.Editing>Editing</TD.Editing>
	<TD.ListThingsMatchingThisSearch>List things matching this search</TD.ListThingsMatchingThisSearch>
	<TD.Viewing>Viewing</TD.Viewing>
	<TD.MatchingAllFilters>Matching all filters</TD.MatchingAllFilters>
	<TD.MatchingAnyFilter>Matching any filter</TD.MatchingAnyFilter>
	<TD.SearchCurrentMapOnly>Search current map only</TD.SearchCurrentMapOnly>
	<TD.SearchAllMaps>Search all maps</TD.SearchAllMaps>
	<TD.SearchChosenMapsOnceLoaded>Search chosen maps (once loaded)</TD.SearchChosenMapsOnceLoaded>
	<TD.AFilterIsForcingThisSearchToRunOnTheCurrentMapOnly>A filter is forcing this search to run on the current map only</TD.AFilterIsForcingThisSearchToRunOnTheCurrentMapOnly>
	<TD.Rename0>Rename {0}</TD.Rename0>
	<TD.Missing01>Missing {0}: {1}?</TD.Missing01>
	<TD.Filter01NeedsAMap>Filter {0}: {1} needs a map - was given null map?</TD.Filter01NeedsAMap>
	<TD.Missing01On2>Missing {0}: {1} in {2}?</TD.Missing01On2>
	<TD.Search0TriedToLoad1FilterButNoMapToFind2>Search {0} tried to load {1} filter but no map was given to find {2}</TD.Search0TriedToLoad1FilterButNoMapToFind2>
	<TD.NoMap>No Map</TD.NoMap>
	<TD.AnyAggresive>Any Aggresive</TD.AnyAggresive>
	<TD.IsHelper>Is Helper</TD.IsHelper>
	<TD.IsLodger>Is Lodger</TD.IsLodger>
	<TD.SecurePrisoner>Secure Prisoner</TD.SecurePrisoner>
	<TD.SecureSlave>Secure Slave</TD.SecureSlave>
	<TD.AnyBleeding>Any bleeding</TD.AnyBleeding>
	<TD.KeepChanges>Keep changes?</TD.KeepChanges>


	<TD.AnyPassion>Any Passion</TD.AnyPassion>
	<TD.IgnorePassion>Ignore Passion</TD.IgnorePassion>
	<TD.Resource>Resource</TD.Resource>
	<TD.Rock>Rock</TD.Rock>
	<TD.Mineable>Mineable</TD.Mineable>
	<TD.PermitIsReady>Permit is Ready</TD.PermitIsReady>
	<TD.HoldsPermit>Holds Permit</TD.HoldsPermit>
	<TD.ContainerBuildings>Containers</TD.ContainerBuildings>
	<TD.Structures>Structures</TD.Structures>
	<TD.AbilityLevel01>Level {0}: {1}</TD.AbilityLevel01>
	
	<TD.DefLabel.RemovePaintBuilding>Remove Paint From Building</TD.DefLabel.RemovePaintBuilding>
	<TD.DefLabel.RemovePaintFloor>Remove Paint From Floor</TD.DefLabel.RemovePaintFloor>
	
	<TD.PlayersIdeoligion>Player's Ideoligion</TD.PlayersIdeoligion>
	<TD.OtherIdeoligion>Other Ideoligion</TD.OtherIdeoligion>
	<TD.PersonsIdeoligion>Their Ideoligion</TD.PersonsIdeoligion>
	<TD.CanBe>Can Be</TD.CanBe>
	<TD.HasRole>Has Role</TD.HasRole>
	<TD.WantsApparelForRole>Wants apparel for role</TD.WantsApparelForRole>
	<TD.AnyNonLeaderRole>Any non-leader role</TD.AnyNonLeaderRole>
	<TD.AnyLeaderRole>Any leader role</TD.AnyLeaderRole>
	<TD.OwnersIdeoligion>Owner's Ideoligion</TD.OwnersIdeoligion>
	<TD.Mood>mood</TD.Mood>
	<TD.Opinion>opinion</TD.Opinion>
	<TD.Level01>Level {0}: {1}</TD.Level01>
	<TD.Chronological>Chronological</TD.Chronological>
	<TD.Biological>Biological</TD.Biological>
	
	<TD.MechsOverseer>Mech's overseer</TD.MechsOverseer>
	<TD.MechanitorsMechs>Mechanitor's mechs</TD.MechanitorsMechs>
	<TD.AnyCommon>Any Common</TD.AnyCommon>
	<TD.NoGene>No gene</TD.NoGene>
	<TD.AnyGene>Any gene</TD.AnyGene>
	<TD.Is>is</TD.Is>
	<TD.As>as</TD.As>
	<TD.WorkMechanoid>Work Mechanoid</TD.WorkMechanoid>
	<TD.ReserverMatches>Reserver matches</TD.ReserverMatches>
	<TD.IsReserved>Is Reserved</TD.IsReserved>
	<TD.Addiction>Addiction</TD.Addiction>
	<TD.Implant>Implant</TD.Implant>
	<TD.Injury>Injury</TD.Injury>
	<TD.High>High</TD.High>
	<TD.Sickness>Sickness</TD.Sickness>

	<TD.WarnCustom>This Custom Filter is advanced, requiring knowledge of game code. It lets the search access any C# field or property to compare its value. Nearly everything is accessible, even mod content.

Now, I'm not providing a guide on how to navigate the game's code, because holy cow, is it too big to explain. In short, you should know what you're looking for instead of just browsing the endless possibilities. A lot of the options are simply not useful, and some are slow, and some are supposed to be hidden in-game. It's a thorough list, not filtered for ease of use.</TD.WarnCustom>

	<TD.WarnExtension>Look, the Custom Filter is advanced enough, but this is an extension method.

You should only use this if you know what the code does. Usually, Custom Filter only lets you access fields and properties - code that doesn't change anything. Extension methods might modify things. You don't want a search to modify things. So you should know what method you're using, and that it only accesses data.</TD.WarnExtension>
	<TD.AnyXWhereX>.Any x =&gt; x</TD.AnyXWhereX>
	<TD.CouldNotFindDef0For123>Could not find def {0} for ({1}) {2}.{3}</TD.CouldNotFindDef0For123>
	<TD.CouldntFindType0>Couldn't find Type {0}</TD.CouldntFindType0>
	<TD.CouldntFindHowToHandle0>Couldn't find how to handle {0}</TD.CouldntFindHowToHandle0>
	<TD.0Options>{0} options</TD.0Options>
	<TD.NoOptions>No options!</TD.NoOptions>
	
</LanguageData>