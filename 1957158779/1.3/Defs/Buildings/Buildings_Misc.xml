<?xml version="1.0" encoding="utf-8"?>
<Defs>
  <!--===== Scarecrow =====-->
  <ThingDef ParentName="BuildingBase">
    <defName>VFE_Scarecrow</defName>
    <label>scarecrow</label>
    <thingClass>VFEF.Building_Scarecrow</thingClass>
    <description>A humanoid figure made out of hay, dressed in old clothes to deter animals in a large radius. Small animals will be too afraid to approach.</description>
    <graphicData>
      <texPath>Things/Building/Scarecrow</texPath>
      <graphicClass>Graphic_Random</graphicClass>
      <drawSize>(1.5,1.5)</drawSize>
    </graphicData>
    <comps>
      <li Class="VFEF.CompProperties_ScaresAnimals">
        <ticksPerPulse>600</ticksPerPulse>        <!-- Don't set this too low, values of ~100 ticks will cause animals to get stuck if placed near a wall -->
        <effectRadius>10</effectRadius>        <!-- don't go too far out with the radius, the performance of this method is O(n^2) -->
        <minFleeDistance>30</minFleeDistance>        <!-- this can be (pretty much) as far as you want, defaults to 23 -->
        <!-- As discussed. Inclusive, so animals with a bodySize of 2.1 or lower will be scared. This value is the muffalo bodySize. The check
					 is for Pawn.BodySize, and so takes the life stage into account. If unset (or set to a negative value) all animals smaller than humans will be affected. -->
        <maxBodySizeToScare>2.1</maxBodySizeToScare>
      </li>
    </comps>
    <!--uiIconPath>Textures/Things/Building/Scarecrow</uiIconPath-->
    <uiIconScale>0.90</uiIconScale>
    <minifiedDef>MinifiedThing</minifiedDef>
    <altitudeLayer>Building</altitudeLayer>
    <rotatable>false</rotatable>
    <thingCategories>
      <li>BuildingsMisc</li>
    </thingCategories>
    <statBases>
      <MaxHitPoints>80</MaxHitPoints>
      <Flammability>1.5</Flammability>
      <WorkToBuild>650</WorkToBuild>
      <Mass>8.5</Mass>
      <Beauty>-7</Beauty>
    </statBases>
    <tickerType>Normal</tickerType>
    <passability>PassThroughOnly</passability>
    <pathCost>50</pathCost>
    <fillPercent>0.25</fillPercent>
    <specialDisplayRadius>10</specialDisplayRadius>
    <hasTooltip>false</hasTooltip>
    <costList>
      <Cloth>30</Cloth>
      <Hay>50</Hay>
    </costList>
    <terrainAffordanceNeeded>Light</terrainAffordanceNeeded>
    <designationCategory>Misc</designationCategory>
    <researchPrerequisites>
      <li>VFE_Res_FarmingTechniques</li>
    </researchPrerequisites>
  </ThingDef>
  <!--===== Animal Feeder =====-->
  <ThingDef ParentName="FurnitureWithQualityBase">
    <defName>VFE_AnimalFeeder</defName>
    <label>animal feeder</label>
    <description>A feeding trough. Food stored in this will not deteriorate, even if outside.</description>
    <thingClass>Building_Storage</thingClass>
    <graphicData>
      <texPath>Things/Building/AnimalFeeder/AnimalFeeder</texPath>
      <graphicClass>Graphic_Multi</graphicClass>
      <drawSize>(3,1.8)</drawSize>
    </graphicData>
    <altitudeLayer>Building</altitudeLayer>
    <passability>PassThroughOnly</passability>
    <fillPercent>0.4</fillPercent>
    <castEdgeShadows>true</castEdgeShadows>
    <stuffCategories>
      <li>Metallic</li>
      <li>Woody</li>
      <li>Stony</li>
    </stuffCategories>
    <costStuffCount>25</costStuffCount>
    <statBases>
      <MaxHitPoints>90</MaxHitPoints>
      <Mass>8</Mass>
      <WorkToBuild>600</WorkToBuild>
      <Flammability>1.0</Flammability>
    </statBases>
    <size>(2,1)</size>
    <defaultPlacingRot>South</defaultPlacingRot>
    <building>
      <preventDeteriorationOnTop>true</preventDeteriorationOnTop>
      <defaultStorageSettings>
        <priority>Important</priority>
        <filter>
          <categories>
            <li>PlantFoodRaw</li>
          </categories>
          <thingDefs>
            <li>Hay</li>
          </thingDefs>
        </filter>
      </defaultStorageSettings>
    </building>
    <inspectorTabs>
      <li>ITab_Storage</li>
    </inspectorTabs>
    <staticSunShadowHeight>0.5</staticSunShadowHeight>
    <surfaceType>Item</surfaceType>
    <designationCategory>Misc</designationCategory>
    <canOverlapZones>false</canOverlapZones>
    <researchPrerequisites>
      <li>VFE_Res_FarmingTechniques</li>
    </researchPrerequisites>
    <comps>
      <li Class="VFEF.CompProperties_AreaGizmo">
        <radius>10</radius>        <!-- the radius of the area designated. accounts for the shape of the building, e.g. a 2x1 feeder will create an area which is one unit longer along the longer side. -->
        <iconPath>Icons/CreateNewArea</iconPath>        <!-- works the same as any other texture path -->
      </li>
    </comps>
  </ThingDef>
  <!--===== Sprinkler =====-->
  <ThingDef>
    <defName>VFE_Sprinkler</defName>
    <label>sprinkler</label>
    <description>A water sprinkler, providing an area around it with water. Enhances the growth of surrounding plants.</description>
    <thingClass>Building</thingClass>
    <graphicData>
      <texPath>Things/Building/Sprinkler</texPath>
      <graphicClass>Graphic_Single</graphicClass>
      <shadowData>
        <volume>(0.3, 0.6, 0.3)</volume>
        <offset>(0,0,-0.1)</offset>
      </shadowData>
      <damageData>
        <rect>(0.2,0.2,0.6,0.6)</rect>
      </damageData>
    </graphicData>
    <blockWind>false</blockWind>
    <tickerType>Normal</tickerType>    <!-- Must be on Normal to use tick distribution. If set to TickRare, ticksPerPulse will always be effectively 250. The particle effect doesn't work on any setting other than Normal. -->
    <statBases>
      <WorkToBuild>350</WorkToBuild>
      <Mass>4.5</Mass>
      <MaxHitPoints>100</MaxHitPoints>
      <Flammability>1.0</Flammability>
    </statBases>
    <costList>
      <Steel>40</Steel>
      <ComponentIndustrial>1</ComponentIndustrial>
    </costList>
    <comps>
      <li Class="CompProperties_Power">
        <compClass>CompPowerTrader</compClass>
        <basePowerConsumption>250</basePowerConsumption>
      </li>
      <li Class="CompProperties_Flickable"/>
      <li Class="VFEF.CompProperties_Sprinkler">
        <effectRadius>5.8</effectRadius>
        <shouldSprinkleMotes>true</shouldSprinkleMotes>        <!-- enables motes, defaults false -->
        <sprinkleDurationTicks>500</sprinkleDurationTicks>        <!-- duration of the sprinkler effect, in ticks -->
        <degreesPerTick>1.44</degreesPerTick>        <!-- rotation between each tick in degrees -->
        <moteThingDef>VFEF_Mote_SprinklerWater</moteThingDef>        <!-- the ThingDef of the particle to spawn -->
        <!-- Reduces the number of motes thrown. The ticks between each spray will be this value minus one.
				 Because the method checks whether there are already too many particles onscreen, setting this too low will result in the animation appearing to "reset" every so often. -->
        <moteMod>4</moteMod>
      </li>
    </comps>
    <specialDisplayRadius>5.8</specialDisplayRadius>    <!-- might not match the effect's radius exactly, see comments in the Sunlamp def -->
    <category>Building</category>
    <minifiedDef>MinifiedThing</minifiedDef>
    <altitudeLayer>Building</altitudeLayer>
    <passability>PassThroughOnly</passability>
    <selectable>true</selectable>
    <fillPercent>0.10</fillPercent>
    <pathCost>8</pathCost>
    <leaveResourcesWhenKilled>false</leaveResourcesWhenKilled>
    <soundImpactDefault>BulletImpact_Metal</soundImpactDefault>
    <designationCategory>Misc</designationCategory>
    <rotatable>false</rotatable>
    <uiIconOffset>(0, 0.03)</uiIconOffset>
    <thingCategories>
      <li>BuildingsMisc</li>
    </thingCategories>
    <researchPrerequisites>
      <li>VFE_Res_Sprinkler</li>
    </researchPrerequisites>
  </ThingDef>
</Defs>